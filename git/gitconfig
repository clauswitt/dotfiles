[user]
  email = claus@wittnezz.dk
  name = Claus Witt

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto


[alias]
    aliases = config --get-regexp alias
    # shotcuts
    st = status
    ci = commit
    co = checkout
    di = diff
    dc = diff --cached
    amend = commit --amend
    aa = add --all
    ff = merge --ff-only
    pullff = pull --ff-only
    noff = merge --no-ff
    fa = fetch --all
    pom = push origin master
    b = branch
    ds = diff --stat=160,120
    dh1 = diff HEAD~1
	wd = diff --word-diff

    m = checkout master

    # various pretty loggers from various places
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
    lc = log ORIG_HEAD.. --stat --no-merges
    # from http://blog.kfish.org/2010/04/git-lola.html
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all

    # from https://git.wiki.kernel.org/index.php/Aliases
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

    # what got pushed to master in the last hour
    #  based on http://stackoverflow.com/questions/3357219/expose-the-date-a-commit-was-pushed-to-a-repository
    justpushed = log origin/master@{\"1 hour ago\"}..origin/master --

    # show a log without the formating, occasionaly handy for c&p
    rawlog = log --format=\"format:commit %H%nAuthor:%an%n%n%B%n\"

    # show a list of branches sorted by time of last commit
    brage = "!f() { git for-each-ref --sort=committerdate refs/heads $1  --format=\"%(refname:short)\" ; }; g() { for C in $(f $1) ; do git show -s --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset  $C\" \"$C\" -- ; done; }; g "

    # show remote branches as well
    brageall = !git brage refs/remotes

    # show a list of tags sorted by when they were tagged
    tagage = "!sh -c 'git for-each-ref --sort=taggerdate refs/tags --format=\"%(refname:short)\"'"

    # show a list of every branch and show their latests commit, sorted by last commit
    brlog = "!sh -c 'for C in $(git for-each-ref --sort=committerdate refs/heads --format=\"%(refname:short)\") ; do git show  -s --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset  $C\" \"$C\" -- ; git show --stat -s $C ; echo; done'"

    # show a list of last change in each branch of a given path
    # roly poly fileheads
    fileheads = "!sh  -c 'for C in $(git for-each-ref --sort=committerdate refs/heads --format=\"%(refname:short)\"| tac) ; do git show -s --pretty=format:\"%Cgreen%ci %Cblue%cr%Creset  $C\" \"$C\" -- ; git log -p -1 $C -- $0; echo; done'"

    # not useful itself, but handy to remember for use in scripts
    thisbranch = rev-parse --abbrev-ref HEAD

    # remove a file from index
    unadd = git reset HEAD

    # url of origin, about 99% of what I use git config --list for
    cloneurl = config --get remote.origin.url
    ldf = "!f() { git diff --name-only \"$(git merge-base HEAD master)\"; }; f"

    # show a list of files with bug fixes in them, sorted by popularity of occurance
    #  aka, list the buggy files
    # FIXME: should probably make all the bug regex stuff scripts so it's easier to customize
    buggyfiles = !"git log -M -C --format=\"format:%n\" --grep \"^[[:digit:]]\\+:\" --name-only | grep .  | sort | uniq -c | sort -n"

    # from https://github.com/cypher/dotfiles/blob/master/gitconfig
    ls-ignored = ls-files --exclude-standard --ignored --others

    # based on "buggyfiles" above and https://github.com/cypher/dotfiles/blob/master/bin/git-churn
    churn = !"git log -M -C --name-only --format=\"format:%n\" | grep . | sort | uniq -c | sort -n"

    # uh, don't do this. list authors by numbers of commits. probably needs a .mailmap
    churners = shortlog -sn --
    # this does the same thing, except slower...
    #churners = !"git log -M -C  --no-color --format=\"%aN\" | sort | uniq -c | sort -n"

    # https://github.com/wadey/dotfiles/blob/master/gitconfig
    # check if a branch has been merged into the current HEAD
    #  if on master, "git merged topic" will tell you if topic
    #  has been merged
    merged = !sh -c 'git rev-list HEAD | grep $(git rev-parse $0)'
    l = log --graph --pretty=format:'%C(yellow)%h%C(cyan)%d%Creset %s %C(white)- %an, %ar%Creset'
    ll = log --stat --abbrev-commit



[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan



[github]
	user = clauswitt

[core]
	excludesfile = ~/.gitignore_global
	editor = vim

[commit]
  template = ~/.gitmessage
[push]
	default = simple
[init]
	templatedir = ~/.git_template
[url "git@github.com:"]
	insteadOf = https://github.com/
[help]
	autocorrect = 1
